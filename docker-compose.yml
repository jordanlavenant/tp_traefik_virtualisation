services:
  reverse-proxy:
    image: traefik:v3.3
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --accesslog=true
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - traefik-public
    deploy:
      mode: replicated
      replicas: 1 # temporaire, Ã  changer en mode global
      placement:
        constraints:
          - node.role == manager
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  # Utilisateurs
  utilisateurs_web:
    build:
      context: ./services/utilisateurs
    image: utilisateurs_web_image:latest
    volumes:
      - ./services/utilisateurs/index.php:/var/www/html/index.php
    ports:
      - "8081:80"
    networks:
      - traefik-public
      - app-utilisateurs
    depends_on:
      - utilisateurs_db
      - utilisateurs_redis
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.utilisateurs.rule=Host(`utilisateurs.localhost`)"
      - "traefik.http.services.utilisateurs.loadbalancer.server.port=80"

  utilisateurs_db:
    image: mysql:latest
    container_name: utilisateurs_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: default_db
    networks:
      - app-utilisateurs
    volumes:
      - utilisateurs_db_data:/var/lib/mysql

  utilisateurs_redis:
    image: redis:latest
    container_name: utilisateurs_redis
    networks:
      - app-utilisateurs
    ports:
      - "6379:6379"

  # Flask
  flask_web:
    build:
      context: ./services/flask
    image: flask_web_image:latest
    volumes:
      - ./services/flask/app.py:/app/app.py
    ports:
      - "8082:80"
    networks:
      - traefik-public
      - app-flask
    depends_on:
      - flask_redis
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.flask.rule=Host(`flask.localhost`)"
      - "traefik.http.services.flask.loadbalancer.server.port=80"

  flask_redis:
    image: redis:latest
    container_name: flask_redis
    networks:
      - app-flask
    ports:
      - "6380:6379"


networks:
  traefik-public:
    external: true
  app-utilisateurs:
    external: true
  app-flask:
    external: true
  # ...

volumes:
  utilisateurs_db_data:
    external: false