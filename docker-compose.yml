services:
  reverse-proxy:
    image: traefik:v3.3
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --accesslog=true
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - traefik-public
    deploy:
      mode: replicated
      replicas: 1 # temporaire, Ã  changer en mode global
      placement:
        constraints:
          - node.role == manager
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$jgvrqd1g$$tjbjgGZcIft1oQoe7hPES/"

  # Utilisateurs
  utilisateurs_web:
    build:
      context: ./services/utilisateurs
    image: utilisateurs_web_image:latest
    volumes:
      - ./services/utilisateurs/index.php:/var/www/html/index.php
    ports:
      - "8081:80"
    networks:
      - traefik-public
      - app-utilisateurs
    depends_on:
      - utilisateurs_db
      - utilisateurs_redis
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.utilisateurs.rule=Host(`utilisateurs.localhost`)"
      - "traefik.http.services.utilisateurs.loadbalancer.server.port=80"
      - "traefik.http.routers.utilisateurs.middlewares=auth"

  utilisateurs_db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: default_db
    networks:
      - app-utilisateurs
    volumes:
      - utilisateurs_db_data:/var/lib/mysql

  utilisateurs_redis:
    image: redis:latest
    networks:
      - app-utilisateurs
    ports:
      - "6381:6379"

  # Cluster Swarm
  clusterswarm_web:
    build:
      context: ./services/clusterswarm
    image: clusterswarm_web_image:latest
    volumes:
      - ./services/clusterswarm/index.php:/var/www/html/index.php
    ports:
      - "8082:80"
    networks:
      - traefik-public
      - app-clusterswarm
    deploy:
      replicas: 5
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.cluster_swarm.rule=Host(`clusterswarm.localhost`)"
      - "traefik.http.services.cluster_swarm.loadbalancer.server.port=80"
      - "traefik.http.routers.cluster_swarm.middlewares=auth"

  # Fortune
  fortune_web:
    build:
      context: ./services/fortune
    image: fortune_web_image:latest
    volumes:
      - ./services/fortune/index.php:/var/www/html/index.php
    ports:
      - "8083:80"
    networks:
      - traefik-public
      - app-fortune
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.fortune.rule=Host(`fortune.localhost`)"
      - "traefik.http.services.fortune.loadbalancer.server.port=80"
      - "traefik.http.routers.fortune.middlewares=auth"

  # Flask
  flask_web:
    build:
      context: ./services/flask
    image: flask_web_image:latest
    volumes:
      - ./services/flask/index.py:/app/index.py
    ports:
      - "8084:80"
    networks:
      - traefik-public
      - app-flask
    depends_on:
      - flask_redis
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.flask.rule=Host(`flask.localhost`)"
      - "traefik.http.services.flask.loadbalancer.server.port=80"
      - "traefik.http.routers.flask.middlewares=auth"

  flask_redis:
    image: redis:latest
    networks:
      - app-flask
    ports:
      - "6384:6379"  

  # Apache
  apache_web:
    build:
      context: ./services/apache
    image: apache_web_image:latest
    volumes:
      - ./services/apache/index.php:/var/www/html/index.php
    networks:
      - traefik-public
      - app-apache
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.apache.rule=PathPrefix(`/chemin`)"
      - "traefik.http.routers.apache.entrypoints=web"
      - "traefik.http.routers.apache.middlewares=auth"

networks:
  traefik-public:
    external: true
  app-utilisateurs:
    external: true
  app-clusterswarm:
    external: true
  app-fortune:
    external: true
  app-flask:
    external: true
  app-apache:
    external: true

volumes:
  utilisateurs_db_data:
    external: false